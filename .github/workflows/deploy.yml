name: Deploy
run-name: DEPLOY ðŸš€
on: [push]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Prepare SSH key
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SERVER_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -p ${{ secrets.SERVER_SSH_PORT }} -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        
    - name: Compress the repository
      run: |
        git archive --format=tar.gz --output=projetonode.tar.gz HEAD
        
    - name: Copy to server
      run: |
        scp -i ~/.ssh/id_rsa -P ${{ secrets.SERVER_SSH_PORT }} projetonode.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/nor/workspace/projetonode.tar.gz
    - name: Deploy to Server
      run: |
        ssh -i ~/.ssh/id_rsa -p ${{ secrets.SERVER_SSH_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << EOF
          mkdir -p /home/nor/workspace/projetonode
          mv /home/nor/workspace/projetonode.tar.gz /home/nor/workspace/projetonode/
          cd /home/nor/workspace/projetonode
          tar -xzf projetonode.tar.gz
          rm -f projetonode.tar.gz
          cp /home/nor/workspace/env/llm/.env /home/nor/workspace/projetonode/
          docker-compose down
          docker-compose up -d --build
          rm -rf /home/nor/workspace/projetonode
        EOF
    
    - name: Cleanup
      run: |
        rm -f ~/.ssh/id_rsa
      if: always()